upper_1 <- density_M_1.quantile[R.seq>-0.4 & R.seq < 1.2,3]
)
M_10.df <- data.frame(
Radius_10.seq <- R.seq[R.seq>-0.3&R.seq<1.2],
median_10 <- density_M_10.quantile[R.seq>-0.3&R.seq<1.2,2],
lower_10 <- density_M_10.quantile[R.seq>-0.3&R.seq<1.2,1],
upper_10 <- density_M_10.quantile[R.seq>-0.3&R.seq<1.2,3]
)
M_50.df <- data.frame(
Radius_50.seq <- R.seq[R.seq>0.1],
median_50 <- density_M_50.quantile[R.seq>0.1,2],
lower_50 <- density_M_50.quantile[R.seq>0.1,1],
upper_50 <- density_M_50.quantile[R.seq>0.1,3]
)
M_100.df <- data.frame(
Radius_100.seq <- R.seq[R.seq>0.3],
median_100 <- density_M_100.quantile[R.seq>0.3,2],
lower_100 <- density_M_100.quantile[R.seq>0.3,1],
upper_100 <- density_M_100.quantile[R.seq>0.3,3]
)
M_500.df <- data.frame(
Radius_500.seq <- R.seq[R.seq>0.5],
median_500 <- density_M_500.quantile[R.seq>0.5,2],
lower_500 <- density_M_500.quantile[R.seq>0.5,1],
upper_500 <- density_M_500.quantile[R.seq>0.5,3]
)
black <- "#1D1D24"
blue <- "#36527A"
green <- "#416339"
orange <- "#BE4B3E"
red <- "#C145FF"
yellow <- "#FFE5AB"
figure8 <-
ggplot() +
geom_path(data = M_1.df, aes(Radius_1.seq, median_1),
color = black, size = 0.5) +
geom_ribbon(data = M_1.df,
aes(x = Radius_1.seq, ymin = lower_1, ymax = upper_1),
fill = black, alpha = 0.3) +
geom_path(data = M_10.df, aes(Radius_10.seq, median_10),
color = blue, size = 0.5) +
geom_ribbon(data = M_10.df,
aes(x = Radius_10.seq, ymin = lower_10, ymax = upper_10),
fill = blue, alpha = 0.3) +
geom_path(data = M_50.df, aes(Radius_50.seq, median_50),
color = green, size = 0.5) +
geom_ribbon(data = M_50.df,
aes(x = Radius_50.seq, ymin = lower_50, ymax = upper_50),
fill = green, alpha = 0.3) +
geom_path(data = M_100.df, aes(Radius_100.seq, median_100),
color = orange, size = 0.5) +
geom_ribbon(data = M_100.df,
aes(x = Radius_100.seq, ymin = lower_100, ymax = upper_100),
fill = orange, alpha = 0.3) +
geom_path(data = M_500.df, aes(Radius_500.seq, median_500),
color = red, size = 0.5) +
geom_ribbon(data = M_500.df,
aes(x = Radius_500.seq, ymin = lower_500, ymax = upper_500),
fill = red, alpha = 0.3) +
coord_cartesian(ylim = c(0,5), xlim = c(-0.3, 1.3)) +
scale_x_continuous(breaks=c(-0.2, log10(1),log10(2),log10(3), log10(4),
log10(5),log10(7),log10(10),log10(15),
log10(20),log10(30)),
labels=c(0.6,1,2,3,4,5,7,10,15,20,30)) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15,face="bold"),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Helvetica", size=12, face = "bold"),
panel.background = element_rect(fill='white', colour='black', size = 1,
linetype = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# panel.border = element_rect(linetype = 1, fill = NA) +
# axis.line = element_line(colour = "black", linetype = 1),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
# ylab(label = "Conditional densities \n for radii given masses") +
ylab(label = " ") +
xlab(expression(paste("Radius (R"["Earth"],")"))) +
annotate("text", x=0.05, y=3.1, size = 4, label= "Mass == 1",
parse=TRUE, col = black) +
annotate("text", x=0.4, y=2.6, size = 4, label= "Mass == 10",
parse=TRUE, col = blue) +
annotate("text", x=0.7, y= 2.0, size = 4, label = "Mass == 50",
parse=TRUE, col = green) +
annotate("text", x=0.9, y=3.5, size = 4, label= "Mass == 100",
parse=TRUE, col = orange) +
annotate("text", x=1.1, y=5, size = 4, label= "Mass == 500",
parse=TRUE, col = red)
pdf.name <- "figure8-conditionaldensitiesRM.pdf"
savepdf(pdf.name, figure8)
##################### Figure 9 #######################
k2.raw.data <- read.csv(file = "k2-planets.csv", skip = 31)
k2.data <- subset(k2.raw.data, select = c("rowid", "pl_hostname", "pl_masse",
"pl_masseerr1", "pl_masseerr2",
"pl_rade", "pl_radeerr1", "pl_radeerr2"))
k2.Mass.sigma <- (k2.data$pl_masseerr1 + abs(k2.data$pl_masseerr2))/2
k2.Radius.sigma <- (k2.data$pl_radeerr1 + abs(k2.data$pl_radeerr2))/2
k2.Mass.obs <- k2.data$pl_masse
k2.Radius.obs <- k2.data$pl_rade
k2.lM.obs <- log10(k2.Mass.obs)
k2.lR.obs <- log10(k2.Radius.obs)
k2.lM.sd.obs <- 0.434*k2.Mass.sigma/k2.Mass.obs
k2.lR.sd.obs <- 0.434*k2.Radius.sigma/k2.Radius.obs
k2.data.points <- data.frame(k2.lnM.obs = k2.lM.obs, k2.lnR.obs = k2.lR.obs,
k2.lnM.max = k2.lM.obs+k2.lM.sd.obs,
k2.lnM.min = k2.lM.obs-k2.lM.sd.obs,
k2.lnR.max = k2.lR.obs+k2.lR.sd.obs,
k2.lnR.min = k2.lR.obs-k2.lR.sd.obs)
# using k2 planet radius to predict distribution of mass
source("MRpredict/MLE.R")
k2.pred.McR <- sapply(k2.lR.obs, FUN = cond.density.quantile,
y.max = Radius.max, y.min = Radius.min,
x.max = Mass.max, x.min = Mass.min,
deg = deg.choose, w.hat = weights.mle)
k2.pred.mean <- k2.pred.McR[1, ]
k2.pred.lower <- k2.pred.McR[3, ]
k2.pred.upper <- k2.pred.McR[4, ]
k2.pred.df <- data.frame(
k2.lnR.obs = k2.lR.obs+0.002,
k2.pred.mean = k2.pred.mean,
k2.pred.lower = k2.pred.lower,
k2.pred.upper = k2.pred.upper
)
library(ggplot2)
library(extrafont)
figure9 <- ggplot() +
geom_point(data = k2.data.points, aes(x = k2.lnR.obs, y = k2.lnM.obs),
col = "grey10", alpha = 1, size = 1.5) +
geom_errorbar(data = k2.data.points,
aes(x = k2.lnR.obs, ymin = k2.lnM.min, ymax = k2.lnM.max),
col = "grey20", alpha = 1, size = 0.3) +
geom_errorbarh(data = k2.data.points,
aes(x = k2.lnR.obs, y = k2.lnM.obs,
xmin = k2.lnR.min, xmax = k2.lnR.max),
col = "grey20", alpha = 1, size = 0.3) +
# geom_point(data = k2.pred.df, aes(x = k2.lnR.obs, y = k2.pred.mean),
#            col = "red", shape = 17, size = 2) +
# geom_errorbar(data = k2.pred.df,
#               aes(x = k2.lnR.obs, ymin = k2.pred.lower, ymax = k2.pred.upper),
#               col = "red", alpha = 0.8, size = 0.3, width=0.02) +
geom_ribbon(data = nonparam.pred.df,
aes(x = radius, ymin = lower, ymax = upper),
fill = darkblue, alpha = 0.3) +
xlab(expression(paste("Radius (R"["Earth"],")"))) +
ylab(expression(paste("Mass (M"["Earth"],")"))) +
coord_cartesian(ylim = c(-1.5,4), xlim = c(-0.3, 1.5)) +
scale_y_continuous(breaks=c(-1, 0, 1, 2, 3, 4),
labels=c(expression(bold("0.1")),
expression(bold("1")),
expression(bold("10")),
expression(bold(paste("10"^"2"))),
expression(bold(paste("10"^"3"))),
expression(bold(paste("10"^"4"))))) +
scale_x_continuous(breaks=c(-0.2, log10(1),log10(2),log10(3), log10(4),
log10(5),log10(7),log10(10),log10(15),
log10(20),log10(30)),
labels=c(0.6, 1,2,3,4,5,7,10,15,20,30)) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15,face="bold"),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Helvetica", size=12, face = "bold"),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
ggtitle("Predicting K2 planets")
pdf.name <- "figure9-predictingK2planets.pdf"
savepdf(pdf.name, figure9)
######################### Plot data points ########################
data.o.points <- data.frame(
M.obs = Mass.obs,
R.obs = Radius.obs,
M.max = Mass.obs+Mass.sigma,
M.min = Mass.obs-Mass.sigma,
R.max = Radius.obs+Radius.sigma,
R.min = Radius.obs-Radius.sigma
)
figure_d1 <- ggplot() +
geom_point(data = data.o.points, aes(x = R.obs, y = M.obs),
col = "grey10", alpha = 1, size = 1) +
xlab(expression(paste("Radius (R"["Earth"],")"))) +
ylab(expression(paste("Mass (M"["Earth"],")")))
savepdf("kepler-data.pdf", figure_d1)
figure_d2 <- ggplot() +
geom_point(data = data.points, aes(x = lnR.obs, y = lnM.obs),
col = "grey10", alpha = 1, size = 1) +
xlab(expression(paste("log(Radius (R"["Earth"],"))"))) +
ylab(expression(paste("log(Mass (M"["Earth"],"))")))
savepdf("kepler-logdata.pdf", figure_d2)
plot(Radius.obs, Mass.obs)
######################### Plot weights ########################
row <- col <- rep(NA, deg.choose * deg.choose)
row[1:(55*55)] <- (0:54)/(Radius.max - Radius.min) + Radius.min
col[1:(55*55)] <- (0:54)/(Mass.max - Mass.min) + Mass.min
weight.dg <- data.frame(
row = row,
col = col,
weights = weights.mle
)
library(ggplot2)
ggplot() +
geom_point(data = data.points, aes(x = lnR.obs, y = lnM.obs),
col = "grey10", alpha = 0.6, size = 1) +
# geom_errorbar(data = data.points,
#               aes(x = lnR.obs, ymin = lnM.min, ymax = lnM.max),
#               col = "grey20", alpha = 0.6, size = 0.15) +
# geom_errorbarh(data = data.points,
#                aes(x = lnR.obs, y = lnM.obs, xmin = lnR.min, xmax = lnR.max),
#                col = "grey20", alpha = 0.6, size = 0.15) +
geom_ribbon(data = nonparam.pred.df,
aes(x = radius, ymin = lower, ymax = upper),
fill = darkblue, alpha = 0.3) +
geom_raster(data = weight.dg,
aes(x = col, y = row, fill = weights), hjust=0.5, vjust=0.5, interpolate=FALSE) +
# geom_point(data = weight.dg,
#             aes(x=row, y=col),
#            alpha=0.7, na.rm = T) +
xlab(expression(paste("Radius (R"["Earth"],")"))) +
ylab(expression(paste("Mass (M"["Earth"],")"))) +
coord_cartesian(ylim = c(-1.5,4), xlim = c(-0.3, 1.5)) +
scale_y_continuous(breaks=c(-1, 0, 1, 2, 3, 4),
labels=c(expression(bold("0.1")),
expression(bold("1")),
expression(bold("10")),
expression(bold(paste("10"^"2"))),
expression(bold(paste("10"^"3"))),
expression(bold(paste("10"^"4"))))) +
scale_x_continuous(breaks=c(-0.2, log10(1),log10(2),log10(3), log10(4),
log10(5),log10(7),log10(10),log10(15),
log10(20),log10(30)),
labels=c(0.6, 1,2,3,4,5,7,10,15,20,30)) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15,face="bold"),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Helvetica", size=12, face = "bold"),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
ggtitle("Kepler data: Mass-Radius Relations")
image(matrix(weights.mle, 55, 55), col=terrain.colors(100),
xaxs="i", yaxs="i")
abline(h = seq(-0.03, 1.03, length.out = 55), lty = 1, col = "grey30")
abline(v = seq(-0.03, 1.03, length.out = 55), lty = 1, col = "grey30")
lines(R.points/8, (M.cond.R.mean[1:100]+10)/(85), col = "blue", lty = 2)
figure5
figure5 <- ggplot()  +
geom_path(data = sd.df, aes(radius, boot.sd.quantile[,2]),
color = darkblue, size = 1) +
geom_ribbon(data = sd.df,
aes(x = radius, ymin = boot.sd.quantile[,1], ymax = boot.sd.quantile[,3]),
fill = darkblue, alpha = 0.3) +
ylab(expression(paste("Instrinic scatter of M-R relation", "\nMass (M"["Earth"],")"))) +
# ylab(label = "Intrinsic scatter of M-R relation") +
xlab(expression(paste("Radius (R"["Earth"],")"))) +
coord_cartesian(ylim = c(0.05, 0.35), xlim = c(-0.3, 1.5)) +
scale_x_continuous(breaks=c(-0.2, log10(1),log10(2),log10(3), log10(4),
log10(5),log10(7),log10(10),log10(15),
log10(20),log10(30)),
labels=c(0.6,1,2,3,4,5,7,10,15,20,30)) +
# geom_rect(aes(xmin=-0.07572071, xmax=0.9, ymin=0, ymax=0.6),
#           colour = "grey10", alpha =  0.1, linetype = 2) +
geom_vline(xintercept = c(-0.07572071, 0.9), linetype = 2, color = "grey50") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15,face="bold"),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Helvetica", size=12, face = "bold"),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
figure5
figure5 <- ggplot()  +
geom_path(data = sd.df, aes(radius, boot.sd.quantile[,2]),
color = darkblue, size = 1) +
geom_ribbon(data = sd.df,
aes(x = radius, ymin = boot.sd.quantile[,1], ymax = boot.sd.quantile[,3]),
fill = darkblue, alpha = 0.3) +
ylab(expression(paste("Instrinic scatter of M-R relation", "\n Mass (M"["Earth"],")"))) +
# ylab(label = "Intrinsic scatter of M-R relation") +
xlab(expression(paste("Radius (R"["Earth"],")"))) +
coord_cartesian(ylim = c(0.05, 0.35), xlim = c(-0.3, 1.5)) +
scale_x_continuous(breaks=c(-0.2, log10(1),log10(2),log10(3), log10(4),
log10(5),log10(7),log10(10),log10(15),
log10(20),log10(30)),
labels=c(0.6,1,2,3,4,5,7,10,15,20,30)) +
# geom_rect(aes(xmin=-0.07572071, xmax=0.9, ymin=0, ymax=0.6),
#           colour = "grey10", alpha =  0.1, linetype = 2) +
geom_vline(xintercept = c(-0.07572071, 0.9), linetype = 2, color = "grey50") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15,face="bold"),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Helvetica", size=12, face = "bold"),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
figure5
figure5 <- ggplot()  +
geom_path(data = sd.df, aes(radius, boot.sd.quantile[,2]),
color = darkblue, size = 1) +
geom_ribbon(data = sd.df,
aes(x = radius, ymin = boot.sd.quantile[,1], ymax = boot.sd.quantile[,3]),
fill = darkblue, alpha = 0.3) +
ylab(expression(paste("Instrinic scatter of M-R relation", "\n", "Mass (M"["Earth"],")"))) +
# ylab(label = "Intrinsic scatter of M-R relation") +
xlab(expression(paste("Radius (R"["Earth"],")"))) +
coord_cartesian(ylim = c(0.05, 0.35), xlim = c(-0.3, 1.5)) +
scale_x_continuous(breaks=c(-0.2, log10(1),log10(2),log10(3), log10(4),
log10(5),log10(7),log10(10),log10(15),
log10(20),log10(30)),
labels=c(0.6,1,2,3,4,5,7,10,15,20,30)) +
# geom_rect(aes(xmin=-0.07572071, xmax=0.9, ymin=0, ymax=0.6),
#           colour = "grey10", alpha =  0.1, linetype = 2) +
geom_vline(xintercept = c(-0.07572071, 0.9), linetype = 2, color = "grey50") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15,face="bold"),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Helvetica", size=12, face = "bold"),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
figure5
figure5 <- ggplot()  +
geom_path(data = sd.df, aes(radius, boot.sd.quantile[,2]),
color = darkblue, size = 1) +
geom_ribbon(data = sd.df,
aes(x = radius, ymin = boot.sd.quantile[,1], ymax = boot.sd.quantile[,3]),
fill = darkblue, alpha = 0.3) +
ylab(expression(atop("Instrinic scatter of M-R relation",
paste("Mass (M"["Earth"],")")))) +
# ylab(label = "Intrinsic scatter of M-R relation") +
xlab(expression(paste("Radius (R"["Earth"],")"))) +
coord_cartesian(ylim = c(0.05, 0.35), xlim = c(-0.3, 1.5)) +
scale_x_continuous(breaks=c(-0.2, log10(1),log10(2),log10(3), log10(4),
log10(5),log10(7),log10(10),log10(15),
log10(20),log10(30)),
labels=c(0.6,1,2,3,4,5,7,10,15,20,30)) +
# geom_rect(aes(xmin=-0.07572071, xmax=0.9, ymin=0, ymax=0.6),
#           colour = "grey10", alpha =  0.1, linetype = 2) +
geom_vline(xintercept = c(-0.07572071, 0.9), linetype = 2, color = "grey50") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15,face="bold"),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Helvetica", size=12, face = "bold"),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
figure5
pdf.name <- "figure5-Keplersd.pdf"
savepdf(pdf.name, figure5)
figure5 <- ggplot()  +
geom_path(data = sd.df, aes(radius, boot.sd.quantile[,2]),
color = darkblue, size = 1) +
geom_ribbon(data = sd.df,
aes(x = radius, ymin = boot.sd.quantile[,1], ymax = boot.sd.quantile[,3]),
fill = darkblue, alpha = 0.3) +
ylab(expression(atop("Instrinic scatter of M-R relation",
paste("log(Mass (M"["Earth"],"))")))) +
# ylab(label = "Intrinsic scatter of M-R relation") +
xlab(expression(paste("Radius (R"["Earth"],")"))) +
coord_cartesian(ylim = c(0.05, 0.35), xlim = c(-0.3, 1.5)) +
scale_x_continuous(breaks=c(-0.2, log10(1),log10(2),log10(3), log10(4),
log10(5),log10(7),log10(10),log10(15),
log10(20),log10(30)),
labels=c(0.6,1,2,3,4,5,7,10,15,20,30)) +
# geom_rect(aes(xmin=-0.07572071, xmax=0.9, ymin=0, ymax=0.6),
#           colour = "grey10", alpha =  0.1, linetype = 2) +
geom_vline(xintercept = c(-0.07572071, 0.9), linetype = 2, color = "grey50") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15,face="bold"),
plot.title = element_text(hjust = 0.5),
text=element_text(family="Helvetica", size=12, face = "bold"),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
figure5
pdf.name <- "figure5-Keplersd.pdf"
savepdf(pdf.name, figure5)
normal <- exp(-beta^2/2)
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist)
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue")
laplace <- exp(-|beta|)
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red")
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red")
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.2))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red")
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.03))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red")
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.02))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red")
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.01))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red")
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.01), lwd = 2)
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red", lwd = 2)
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.01), lwd = 2,
xlim = c(-6, 6))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red", lwd = 2)
groupsp <- exp(-2*(beta^2))
groupsp.dist <- groupsp/sum(groupsp)
lines(beta, groupsp.dist, col = "green", lwd = 2)
groupsp <- exp(-(beta^2)/sqrt(2))
groupsp.dist <- groupsp/sum(groupsp)
lines(beta, groupsp.dist, col = "green", lwd = 2)
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.01), lwd = 2,
xlim = c(-6, 6))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red", lwd = 2)
groupsp <- exp(-(beta^2)/sqrt(2))
groupsp.dist <- groupsp/sum(groupsp)
lines(beta, groupsp.dist, col = "green", lwd = 2)
groupsp <- exp(-(beta^2)/2)
groupsp.dist <- groupsp/sum(groupsp)
lines(beta, groupsp.dist, col = "green", lwd = 2)
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.01), lwd = 2,
xlim = c(-6, 6))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red", lwd = 2)
groupsp <- exp(-(beta^2)/2)
groupsp.dist <- groupsp/sum(groupsp)
lines(beta, groupsp.dist, col = "green", lwd = 2)
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.01), lwd = 2,
xlim = c(-6, 6))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red", lwd = 2)
groupsp <- exp(-(beta^2)/sqrt(2))
groupsp.dist <- groupsp/sum(groupsp)
lines(beta, groupsp.dist, col = "green", lwd = 2)
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.01), lwd = 2,
xlim = c(-6, 6))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red", lwd = 2)
groupsp <- exp(-(beta^2)/sqrt(3))
groupsp.dist <- groupsp/sum(groupsp)
lines(beta, groupsp.dist, col = "green", lwd = 2)
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.01), lwd = 2,
xlim = c(-6, 6))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red", lwd = 2)
groupsp <- exp(-abs(beta)/sqrt(2))
groupsp.dist <- groupsp/sum(groupsp)
lines(beta, groupsp.dist, col = "green", lwd = 2)
beta <- seq(-10, 10, length.out = 1000)
normal <- exp(-beta^2/2)
normal.dist <- normal/sum(normal)
plot(beta, normal.dist, type = "l", col = "blue",
ylim = c(0, 0.01), lwd = 2,
xlim = c(-6, 6))
laplace <- exp(-abs(beta))
laplace.dist <- laplace/sum(laplace)
lines(beta, laplace.dist, col = "red", lwd = 2)
